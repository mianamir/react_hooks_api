[{"/Users/amirarif/Documents/javascript/reactjs/udemy/react_effects_reducers/src/index.js":"1","/Users/amirarif/Documents/javascript/reactjs/udemy/react_effects_reducers/src/App.js":"2","/Users/amirarif/Documents/javascript/reactjs/udemy/react_effects_reducers/src/components/MainHeader/MainHeader.js":"3","/Users/amirarif/Documents/javascript/reactjs/udemy/react_effects_reducers/src/components/Login/Login.js":"4","/Users/amirarif/Documents/javascript/reactjs/udemy/react_effects_reducers/src/components/Home/Home.js":"5","/Users/amirarif/Documents/javascript/reactjs/udemy/react_effects_reducers/src/components/MainHeader/Navigation.js":"6","/Users/amirarif/Documents/javascript/reactjs/udemy/react_effects_reducers/src/components/UI/Button/Button.js":"7","/Users/amirarif/Documents/javascript/reactjs/udemy/react_effects_reducers/src/components/UI/Card/Card.js":"8","/Users/amirarif/Documents/javascript/reactjs/udemy/react_effects_reducers/src/store/auth-context.js":"9"},{"size":169,"mtime":1616593928000,"results":"10","hashOfConfig":"11"},{"size":1238,"mtime":1643718502414,"results":"12","hashOfConfig":"11"},{"size":306,"mtime":1643718378802,"results":"13","hashOfConfig":"11"},{"size":4591,"mtime":1643711183300,"results":"14","hashOfConfig":"11"},{"size":360,"mtime":1643711331592,"results":"15","hashOfConfig":"11"},{"size":669,"mtime":1643718666954,"results":"16","hashOfConfig":"11"},{"size":353,"mtime":1616593928000,"results":"17","hashOfConfig":"11"},{"size":218,"mtime":1616593928000,"results":"18","hashOfConfig":"11"},{"size":433,"mtime":1643722720188,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1ml4tt3",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},"/Users/amirarif/Documents/javascript/reactjs/udemy/react_effects_reducers/src/index.js",[],["41","42"],"/Users/amirarif/Documents/javascript/reactjs/udemy/react_effects_reducers/src/App.js",["43"],"import React, { useState, useEffect } from 'react';\n\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport AuthContext from './store/auth-context';\n\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n    document.title = \"Chat Room Application | React Hooks\"\n }, []);\n\n  useEffect( () => {\n    const isLoggedInData = localStorage.getItem('isLoggedIn');\n\n    if (isLoggedInData === '1'){\n      setIsLoggedIn(true);\n    }\n\n  },);\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n\n    localStorage.setItem('isLoggedIn', '1');\n\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn');\n    setIsLoggedIn(false);\n  };\n\n  return (\n  \n    <AuthContext.Provider value={\n    {\n      isLoggedIn: isLoggedIn,\n      onLogout: logoutHandler\n    }\n    }>\n    <MainHeader />\n    <main>\n      {!isLoggedIn && <Login onLogin={loginHandler} />}\n      {isLoggedIn && <Home onLogout={logoutHandler} />}\n    </main>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","/Users/amirarif/Documents/javascript/reactjs/udemy/react_effects_reducers/src/components/MainHeader/MainHeader.js",[],"/Users/amirarif/Documents/javascript/reactjs/udemy/react_effects_reducers/src/components/Login/Login.js",[],"/Users/amirarif/Documents/javascript/reactjs/udemy/react_effects_reducers/src/components/Home/Home.js",[],"/Users/amirarif/Documents/javascript/reactjs/udemy/react_effects_reducers/src/components/MainHeader/Navigation.js",[],"/Users/amirarif/Documents/javascript/reactjs/udemy/react_effects_reducers/src/components/UI/Button/Button.js",[],"/Users/amirarif/Documents/javascript/reactjs/udemy/react_effects_reducers/src/components/UI/Card/Card.js",[],"/Users/amirarif/Documents/javascript/reactjs/udemy/react_effects_reducers/src/store/auth-context.js",["44","45","46"],"import React, { useState } from 'react';\n\n// use this for app or component wise state\nconst AuthContext = React.createContext({\n    isLoggedIn: false,\n    onLogout: () => {}\n}); \n\n\nexport const AuthContextProvider = (props) => {\n\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n\n    const logoutHandler = () => {};\n\n    return <AuthContext.Provider>{props.children}</AuthContext.Provider>\n};\n\n\nexport default AuthContext;\n\n",{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":16,"column":3,"nodeType":"53","endLine":16,"endColumn":12,"suggestions":"54"},{"ruleId":"55","severity":1,"message":"56","line":12,"column":12,"nodeType":"53","messageId":"57","endLine":12,"endColumn":22},{"ruleId":"55","severity":1,"message":"58","line":12,"column":24,"nodeType":"53","messageId":"57","endLine":12,"endColumn":37},{"ruleId":"55","severity":1,"message":"59","line":15,"column":11,"nodeType":"53","messageId":"57","endLine":15,"endColumn":24},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setIsLoggedIn'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.","Identifier",["62"],"no-unused-vars","'isLoggedIn' is assigned a value but never used.","unusedVar","'setIsLoggedIn' is assigned a value but never used.","'logoutHandler' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"63","fix":"64"},"Add dependencies array: []",{"range":"65","text":"66"},[570,570],", []"]